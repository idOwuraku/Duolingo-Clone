name: ðŸš€ Full Smart Semantic Release & Build

on:
  push:
    branches:
      - main

permissions:
  contents: write        
  packages: write  
  id-token: write
  security-events: write 

jobs:
  semantic-release-build:
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: duolingo-clone
      GCP_REGION: africa-south1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Authenticate to GCP
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }} 

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker Credentials
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run lint and tests
        run: |
          npm run lint --if-present
          npm test --if-present
          
      - name: Run Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with: 
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'library'
          severity: 'CRITICAL,HIGH'

      - name: Run semantic-release
        id: semver
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.semver.outputs.new_release_published == 'true'
        uses: docker/setup-buildx-action@v3
        
      - name: Check if image tag already exists in GAR
        if: steps.semver.outputs.new_release_published == 'true'
        id: check_image
        continue-on-error: true
        run: |
          gcloud artifacts docker images describe \
            "${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_AR_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.new_release_version }}"

      - name: Build image locally
        if: steps.check_image.outcome == 'failure'
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false 
          load: true  
          tags: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_AR_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.new_release_version }}
          build-args: |
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            APP_VERSION=${{ steps.semver.outputs.new_release_version }}
            BUILD_DATE=$(date -u +'%Y-m-%dT%H:%M:%SZ')
          cache-from: type:gha
          cache-to: type:gha,mode:max

      - name: Trivy Image Scan (Fails on HIGH/CRITICAL)
        if: steps.build.outcome == 'success' 
        id: trivy_scan 
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_AR_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.new_release_version }}
          scan-type: 'image'
          format: 'sarif'
          output: 'trivy-image.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          exit-code: '1' 

      - name: Upload SARIF to GitHub Security tab
      
        if: always() && (steps.trivy_scan.outcome == 'success' || steps.trivy_scan.outcome == 'failure')
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-image.sarif

      - name: Upload Trivy SARIF as artifact
        
        if: always() && (steps.trivy_scan.outcome == 'success' || steps.trivy_scan.outcome == 'failure')
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report
          path: trivy-image.sarif

      - name: Push image to GAR
        if: steps.trivy_scan.outcome == 'success' # <-- FIX: Only push if scan PASSED
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_AR_REPO }}/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.new_release_version }}
          echo "âœ… Successfully pushed version ${{ steps.semver.outputs.new_release_version }}"
    
      - name: Log skip if image already exists
        if: steps.check_image.outcome == 'success' # <-- FIX: More precise condition
        run: |
          echo "Image version ${{ steps.semver.outputs.new_release_version }} already exists in GAR."
          echo "Skipping build, scan, and push."

      - name: Log skip if no new version
        if: steps.semver.outputs.new_release_published == 'false'
        run: |
          echo "No new version detected. Exiting workflow."

