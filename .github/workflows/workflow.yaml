# This is a pipeline to test "Full Smart" semantic-release.
# It triggers on push to main, runs semantic-release to create tags
# and push commits, then builds the new version locally.
name: üöÄ TEST Full Smart Semantic Release & Build

on:
  push:
    branches:
      - main

permissions:
  contents: write         # Needed for semantic-release to push commits/tags
  packages: write         # (Kept for consistency, can be removed)

jobs:
  semantic-release-build:
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: duolingo-clone
      # Define a static region for Docker tag consistency
      REGION: us-central1 

    steps:
      # --- 1Ô∏è‚É£ Checkout repo ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for semantic-release commit analysis

      # --- 2Ô∏è‚É£ Setup Node.js ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      # --- 3Ô∏è‚É£ Run lint & tests (optional but recommended) ---
      - name: Run lint and tests
        run: |
          npm run lint --if-present
          npm test --if-present
          
      # --- 4Ô∏è‚É£ Run semantic-release ---
      # This step does all the magic:
      # 1. Analyzes commits since the last Git tag
      # 2. Creates a new Git tag (e.g., v2.0.0)
      # 3. Updates package.json and pushes it (if configured)
      # 4. Creates a GitHub Release
      - name: Run semantic-release
        id: semver
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --- 5Ô∏è‚É£ Set up Dnpm install --save-dev @semantic-release/npm @semantic-release/gitocker Buildx (if new version) ---
      - name: Set up Docker Buildx
        if: steps.semver.outputs.new_release_published == 'true'
        uses: docker/setup-buildx-action@v3
        
      # --- 6Ô∏è‚É£ Build image locally (if new version) ---
      - name: Build image locally
        if: steps.semver.outputs.new_release_published == 'true'
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false # Do not push
          load: true  # Load into local Docker daemon
          tags: ${{ env.REGION }}-docker.pkg.dev/local-project/local-repo/${{ env.IMAGE_NAME }}:${{ steps.semver.outputs.new_release_version }}
          build-args: |
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            APP_VERSION=${{ steps.semver.outputs.new_release_version }}
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # --- 7Ô∏è‚É£ Log skip (if no new version) ---
      - name: Log skip
        if: steps.semver.outputs.new_release_published == 'false'
        run: |
          echo "No new version detected. Exiting workflow."

